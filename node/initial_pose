#!/usr/bin/env python
"""
DESCRIPTION:
+ Puts Baxter into final pose after firing gun

PUBLISHERS:
+ display_trajectory_publisher (/move_group/display_planned_path) - displays trajectory in RViz

ACTION SERVICES:
+ _as (finalcommander) - Initiates action service for commander node
"""

import sys
import rospy
import copy
import baxter_interface
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
from geometry_msgs.msg import Point, Quaternion, Pose, PoseStamped
from baxter_interface import Gripper, CHECK_VERSION
from std_msgs.msg import String, Bool
from moveit_commander.conversions import pose_to_list
from tf.transformations import quaternion_from_euler
from gripper import *

def add_box(scene):
		""" Adds a box to the Planning Scene
			so that Baxter knows to avoid it with
			all its links 
		"""
		# Add Objects to Planning Scene
		box_name = 'table'
		box_pose = PoseStamped()
		# Can reference to base frame
		# Or can reference to EE finger frame
		# for grasping
		box_pose.header.frame_id = "base"
		box_pose.pose.position.x = 1.15
		box_pose.pose.position.z = -0.46
		box_pose.pose.orientation.w = 1.0
		# Length, Width, Height
		scene.add_box(box_name, box_pose, size=(0.85,1.5,0.55))
		# return self.wait_for_state_update(box_is_known=True, timeout=timeout)
	

def move2initial():
		"""
		Moves Baxter to the initial configuration
		"""
		left = baxter_interface.Limb('left')
		right = baxter_interface.Limb('right')

		lcmd ={'left_s0':-0.439102000532,'left_s1':-0.459043750775,'left_e0':-0.956820516444,'left_e1':1.11788849917,'left_w0':0.92307293911,'left_w1':1.27818949151,'left_w2':-0.546480655684} #0.609835}
		rcmd = {'right_s0':0.495475794487,'right_s1':-0.539194246942,'right_e0':0.65462630123,'right_e1':1.17464578832,'right_w0':-0.627014647048,'right_w1':1.18461666344,'right_w2':0.493941813699} #0.681423}

		left.move_to_joint_positions(lcmd)
		right.move_to_joint_positions(rcmd)

def hard_code_try():
		"""
		hardcode the first notes for both arm
		"""

		#prestand for the first note:
		left_prestand = baxter_interface.Limb('left')
		right_prestand = baxter_interface.Limb('right')

		lcmd_prestand ={'left_s0':-0.327888393411,'left_s1':-0.24812139244,'left_e0':-0.81416030317,'left_e1':0.967558381959,'left_w0':0.890859342564,'left_w1':1.17311180754,'left_w2':-0.336708782941} #0.609835}
		rcmd_prestand = {'right_s0':0.866315649958,'right_s1':-0.447922390063,'right_e0':0.103543703182,'right_e1':1.04118945978,'right_w0':-0.111980597516,'right_w1':1.00130595929,'right_w2':0.246587411653} #0.681423}

		left_prestand.move_to_joint_positions(lcmd_prestand)
		right_prestand.move_to_joint_positions(rcmd_prestand)
		#play the first note:
		left_first = baxter_interface.Limb('left')
		right_first = baxter_interface.Limb('right')

		lcmd_first ={'left_s0':-0.393082576896,'left_s1':-0.190980608092,'left_e0':-0.71790300873,'left_e1':0.956437021247,'left_w0':0.884723419413,'left_w1':1.06956810435,'left_w2':-0.343611696486} #0.609835}
		rcmd_first = {'right_s0':0.874369049095,'right_s1':-0.343995191683,'right_e0':0.10009224641,'right_e1':1.01664576717,'right_w0':-0.115815549485,'right_w1':0.915786530368,'right_w2':0.320985479865} #0.681423}

		left_first.move_to_joint_positions(lcmd_first)
		right_first.move_to_joint_positions(rcmd_first)

def main():
	rospy.init_node("initial_pose", anonymous=True)
	rospy.loginfo("Initializing")
	scene = moveit_commander.PlanningSceneInterface()
	add_box(scene)
	rospy.loginfo("calibrate the gripper")
	# State Gripper (L)
	left_gripper = Gripper('left', CHECK_VERSION)
	# Reboot Gripper
	left_gripper.reboot()
	# Calibrate Gripper
	left_gripper.calibrate()
	#1 key in between
	left_gripper.command_position(15)

	# State Gripper (R)
	right_gripper = Gripper('right', CHECK_VERSION)
	# Reboot Gripper
	right_gripper.reboot()
	# Calibrate Gripper
	right_gripper.calibrate()

	try:
		move2initial()
		hard_code_try()
	except rospy.ROSInterruptException:
		return
	except KeyboardInterrupt:
		return


if __name__ == '__main__':
	main()